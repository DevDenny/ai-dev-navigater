[
  {
    "title": "testaaa",
    "description": "testaaa",
    "content": "testaaatestaaatestaaatestaaatestaaa",
    "category": "test",
    "categoryName": "教程",
    "date": "2024-12-17",
    "path": "data/md/testaaa.md",
    "slug": "testaaa"
  },
  {
    "title": "测试-Redux快速体验",
    "description": "Redux快速体验",
    "content": "\n## Redux快速体验\n### 实现一个计数器\n步骤：\n- 1.定义一个 reducer 函数 (根据当前想要做的修改返回一个新的状态)\n- 2.使用createStore方法传入 reducer函数 生成一个store实例对象\n- 3.使用store实例的 subscribe方法 订阅数据的变化(数据一旦变化，可以得到通知)\n- 4.使用store实例的 dispatch方法提交action对象 触发数据变化(告诉reducer你想怎么改数据)\n- 5.使用store实例的 getState方法 获取最新的状态数据更新到视图中\n\n### Redux管理数据流程梳理\n![[Pasted image 20240530102008.png]]\n为了职责清晰，数据流向明确，Redux把整个数据修改的流程分成了三个核心概念，分别是:state、action和reducer\n- 1.state-一个对象 存放着我们管理的数据状态\n- 2.action-一个对象 用来描述你想怎么改数据\n- 3.reducer--个函数 更具action的描述生成一个新的state\n\n### 代码实现\n```js\n<script>\n  // 1. 定义reducer函数 \n  // 作用: 根据不同的action对象，返回不同的新的state\n  // state: 管理的数据初始状态\n  // action: 对象 type 标记当前想要做什么样的修改\n  function reducer (state = { count: 0 }, action) {\n    // 数据不可变：基于原始状态生成一个新的状态\n    if (action.type === 'INCREMENT') {\n      return { count: state.count + 1 }\n    }\n    if (action.type === 'DECREMENT') {\n      return { count: state.count - 1 }\n    }\n    return state\n  }\n\n  // 2. 使用reducer函数生成store实例\n  const store = Redux.createStore(reducer)\n\n  // 3. 通过store实例的subscribe订阅数据变化\n  // 回调函数可以在每次state发生变化的时候自动执行\n  store.subscribe(() => {\n    console.log('state变化了', store.getState())\n    document.getElementById('count').innerText = store.getState().count\n  })\n\n  // 4. 通过store实例的dispatch函数提交action更改状态 \n  const inBtn = document.getElementById('increment')\n  inBtn.addEventListener('click', () => {\n    // 增\n    store.dispatch({\n      type: 'INCREMENT'\n    })\n  })\n\n  const dBtn = document.getElementById('decrement')\n  dBtn.addEventListener('click', () => {\n    // 减\n    store.dispatch({\n      type: 'DECREMENT'\n    })\n  })\n\n  // 5. 通过store实例的getState方法获取最新状态更新到视图中\n\n</script>\n```\n\n# Redux&React 环境准备\n## 安装必要插件\n创建项目\n```java\nnpx create-react-app react-redux-pro\n```\n\n安装配套工具\n```js\nnpm i @reduxjs/toolkit react-redux\n```\n启动项目\n```js\nnpm run start\n```\n## 建立store目录\n![[Pasted image 20240530105153.png]]\n- 1.通常集中状态管理的部分都会单独创建一个单独的`store`目录\n- 2.应用通常会有很多个子store模块，所以创建一个`modules`目录，在内部编写业务分类的子store\n- 3.store中的入口文件 index.is 的作用是组合modules中所有的子模块，并导出store\n![图片描述](https://raw.githubusercontent.com/DevDenny/ai-dev-navigater/main/uploads/images/1734405524003_0dy8tn.png)",
    "category": "test",
    "categoryName": "教程",
    "date": "2024-12-17",
    "path": "data/md/redux.md"
  },
  {
    "title": "实现一个计数器",
    "description": "实现一个计数器",
    "date": "2024-12-17",
    "category": "",
    "categoryName": "",
    "path": "data/md/.md",
    "lastModified": "2024-12-17T01:47:16.379Z"
  },
  {
    "title": "test pic and text",
    "description": "test pic and text",
    "date": "2024-12-13",
    "category": "test",
    "categoryName": "教程",
    "lastModified": "2024-12-13T03:56:40Z",
    "path": "data/md/test-pic-and-text.md"
  },
  {
    "title": "test",
    "description": "test",
    "date": "2024-12-13",
    "category": "test1",
    "categoryName": "资讯",
    "lastModified": "2024-12-13T03:53:38Z",
    "path": "data/md/test.md"
  },
  {
    "title": "Contributing to GitBase",
    "description": "Hi, I'm Qiayue, creator of GitBase. I'm excited to welcome you to our project and look forward to your contributions in making GitBase even better!",
    "date": "2024-08-16T03:57:46.153Z",
    "category": "",
    "categoryName": "",
    "lastModified": "2024-12-09T11:48:18Z",
    "path": "data/md/how-to-contributing-to-gitbase.md"
  },
  {
    "title": "Managing Articles in GitBase Admin Panel",
    "description": "This guide will walk you through the process of viewing, editing, and creating new articles using the admin panel.",
    "date": "2024-08-11T13:16:44.231Z",
    "category": "",
    "categoryName": "",
    "lastModified": "2024-12-09T11:48:18Z",
    "path": "data/md/managing-articles.md"
  },
  {
    "title": "Accessing the Admin Panel and Managing Resources in GitBase",
    "description": "How to access the admin panel and manage your resource list in GitBase",
    "date": "2024-08-11T13:14:40.737Z",
    "category": "",
    "categoryName": "",
    "lastModified": "2024-12-09T13:21:05Z",
    "path": "data/md/accessing-admin-managing-resources.md"
  },
  {
    "title": "Configuring Environment Variables for GitBase",
    "description": "How to configure GitBase environment variables",
    "date": "2024-08-11T13:08:05.474Z",
    "category": "",
    "categoryName": "",
    "lastModified": "2024-12-09T11:48:18Z",
    "path": "data/md/environment-variables.md"
  },
  {
    "title": "Installing and Deploying GitBase: A Step-by-Step Guide",
    "description": "A comprehensive guide for setting up GitBase locally and deploying it to Vercel, suitable for beginners.",
    "date": "2024-08-11",
    "category": "",
    "categoryName": "",
    "lastModified": "2024-12-09T11:48:18Z",
    "path": "data/md/gitbase-install-guide.md"
  },
  {
    "title": "GitBase: A Dynamic, Database-Free Website Solution",
    "description": "Explore the features and implementation of GitBase, an innovative open-source project that combines Next.js, Tailwind CSS, and GitHub API for content management.",
    "date": "2024-08-11",
    "category": "",
    "categoryName": "",
    "lastModified": "2024-12-09T11:48:18Z",
    "path": "data/md/gitbase-introduction.md"
  }
]